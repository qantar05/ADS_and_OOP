Bubble Sort>>
import java.util.*;

public class Main {

	public static void main(String[] args){

		Scanner in = new Scanner(System.in);

		int n = in.nextInt();
		int[] arr = new int[n];

		for(int i=0;i<n;i++){
			arr[i] = in.nextInt();
		}
		for(int i =0;i<n-1;i++){
			for(int j=0;j<n-i-1;j++){

				if(arr[j]>arr[j+1]){

					int temp = arr[j];
					arr[j] = arr[j+1];
					arr[j+1] = temp;
				}
			}

		}
		for(int i=0;i<n;i++){
			System.out.print(arr[i]+" ");
		}

	}
}


HeapSort>>
import java.util.*;

public class Main {
	public static void heapSort(int[] arr, int n){

		for(int i = n/2-1;i>=0; i--){
			heapify(arr,n,i);
		}
		for(int i=n-1;i > 0; i--){

			int temp = arr[0];
			arr[0] = arr[i];
			arr[i] = temp;

			heapify(arr,i,0);
		}


	}
	public static void heapify(int[] arr,int n,int i){

		int largest = i;
		int l = i*2+1;
		int r = i*2+2;
		if(l < n && arr[l] > arr[largest]){

			largest = l;
		}
		if(r < n && arr[r] > arr[largest]){

			largest = r;
		}
		if(largest!=i){

			int swap = arr[i];
			arr[i] = arr[largest];
			arr[largest] = swap;

			heapify(arr,n,largest);

		}


	}
	public static void main(String[] args){
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int[] arr = new int[n];
		for(int i=0;i<n;i++){
			arr[i] = in.nextInt();
		}
		heapSort(arr,n);
		for(int i=0;i<n;i++){
			System.out.print(arr[i]+" ");
		}

	}
}

QuickSort>>
import java.util.*;

public class Main {
	public static void QuickSort(int[] arr,int low, int high){
			if(low < high){

				int pi = partrition(arr,low,high);
				QuickSort(arr,low,pi-1);
				QuickSort(arr,pi+1,high);

			}


	}
	public static int partrition(int[] arr,int low,int high){
		int pivot = arr[high];
		int i = low - 1;
		for(int j = low;j<=high;j++){

			if(arr[j]<pivot){
				i++;
				swap(arr,i,j);

			}
		}
		swap(arr,i+1,high);
		return i+1;


	}
	public static void swap(int[] arr,int i,int j){
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;

	}
	public static void main(String[] args){
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int[] arr = new int[n];
		for(int i=0;i<n;i++){
			arr[i] = in.nextInt();
		}
		QuickSort(arr,0,n-1);
		for(int i=0;i<n;i++){
			System.out.print(arr[i]+" ");
		}

	}
}


import java.util.*;

public class Main {
    public static void MergeSort(int[] arr,int l,int r){
            if(l<r){

                int m = l + (r-l) / 2;

                MergeSort(arr,l,m);
                MergeSort(arr,m+1,r);

                sort(arr,l,m,r);


            }


    }
    public static void sort(int[] arr,int left,int mid ,int right){

        int sub1 = mid - left + 1;
        int sub2 = right - mid;

        int LEFT[] = new int[sub1];
        int RIGHT[] = new int[sub2];

        for(int i=0;i<sub1;i++){
            LEFT[i] = arr[left + i];
        }
        for(int j=0;j<sub2;j++){
            RIGHT[j] = arr[mid + 1 + j];
        }
        int i=0, j =0;

        int k = left;
        while(i < sub1 && j < sub2){
            if(LEFT[i]<=RIGHT[j]){
                arr[k] = LEFT[i];
                i++;
            }
            else{
                arr[k] = RIGHT[j];
                j++;
            }
            k++;
        }

        while( i < sub1){

            arr[k] = LEFT[i];
            i++;
            k++;
        }
        while( j < sub2){

            arr[k] = RIGHT[j];
            j++;
            k++;
        }


    }


    public static void main(String[] args){

        Scanner in = new Scanner(System.in);
        int n = in.nextInt();

        int[] arr = new int[n];
        for(int i =0;i<n;i++){
            arr[i] = in.nextInt();
        }
        MergeSort(arr,0,n-1);
        for(int i =0;i<n;i++){
            System.out.print(arr[i]+" ");
        }


    }
}
